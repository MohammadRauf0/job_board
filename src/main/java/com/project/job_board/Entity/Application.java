package com.project.job_board.Entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

// Data, AllArgsConstructors, and NoArgsConstructor take care of constructors, getters, and setters
@Data
@AllArgsConstructor
@NoArgsConstructor

// the annotation below is responsible for letting Spring Boot know that this is
// an entity
@Entity

// the annotation below handles the name of the data table in the database
// IS OPTIONAL
@Table(name = "applicationTable")
public class Application {
  // Id annotation below is used to specify the primary key attribute of an
  // entity
  // GeneratedValue Specifies that the 'id' field is a primary key with values
  // generated by the
  // database using an identity column.
  // Column annotation below maps the 'id' field to a database column named 'id'.
  // IS OPTIONAL
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Column(name = "id")
  Long id;

  String status, applicationDate, notes;

  // the annotation below signifies a many-to-one relationship with the 'job' field
  // in the Job class. 'JoinColumn' specifies the name of the foreign key column
  // in the database that references the 'id' field in the Job class.
  @ManyToOne
  @JoinColumn(name = "jobId")
  Job job;

  // the annotation below signifies a many-to-one relationship with the 'applicant' field
  // in the Applicant class. 'JoinColumn' specifies the name of the foreign key column
  // in the database that references the 'id' field in the Applicant class.
  @ManyToOne
  @JoinColumn(name = "applicantId")
  Applicant applicant;

  // the annotation below signifies a many-to-one relationship with the 'employer' field
  // in the Employer class. 'JoinColumn' specifies the name of the foreign key column
  // in the database that references the 'id' field in the Employer class.
  @ManyToOne
  @JoinColumn(name = "employerId")
  Employer employer;
}